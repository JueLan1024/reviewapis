syntax = "proto3";

package api.operation.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "review-o/api/operation/v1;v1";
option java_multiple_files = true;
option java_package = "api.operation.v1";

service Operation{
    // O端审核评价
	rpc AuditReview (AuditReviewRequest) returns (AuditReviewReply) {
		option (google.api.http) = {
			post: "o/v1/review/audit",
			body: "*"
		};
	}
    // O端评价申诉审核
	rpc AuditAppeal (AuditAppealRequest) returns (AuditAppealReply) {
		option (google.api.http) = {
			post: "o/v1/appeal/audit",
			body: "*"
		};
	}
}

// 审核评价的请求
message AuditReviewRequest {
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}];
	int32 status = 2 [(validate.rules).int32 = {gt: 0}];
	string opUser = 3 [(validate.rules).string = {min_len: 2}];
	string opReason = 4 [(validate.rules).string = {min_len: 2}];
	optional string opRemarks = 5;
}

// 审核评价的返回值
message AuditReviewReply {
	int64 reviewID = 1;
	int32 status = 2;
}

// 对申诉进行审核的请求
message AuditAppealRequest{
	int64 appealID = 1 [(validate.rules).int64 = {gt: 0}];
	int64 reviewID =2 [(validate.rules).int64 = {gt: 0}];
	int32 status = 3 [(validate.rules).int32 = {gt: 0}];
	string opUser = 4 [(validate.rules).string = {min_len: 2}];
	optional string opRemarks = 5;
}

// 对申诉进行审核的返回值
message AuditAppealReply{
	int64 appealID = 1;
	int32 status = 2;
}